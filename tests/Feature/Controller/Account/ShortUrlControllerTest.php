<?php declare(strict_types = 1);

namespace Tests\Feature\Controller\Account;

use App\Models\ShortUrl\ShortUrl;
use App\Models\User;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Tests\TestCase;

/**
 * Class ShortUrlTest
 * @package Tests\Feature\Controller\Account
 */
class ShortUrlControllerTest extends TestCase
{
    use DatabaseTransactions;

    private $user;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = factory(User::class)->create();
    }

    /**
     * @covers \App\Http\Controllers\User\ShortUrlController::showUrlsListView()
     */
    public function testUrlView()
    {
        $response = $this->actingAs($this->user)->get('account/urls');
        $response->assertStatus(200);
    }

    /**
     * @covers \App\Http\Controllers\User\ShortUrlController::showAddUrlView()
     */
    public function testUrlAddView()
    {
        $response = $this->actingAs($this->user)->get('account/urls/add');
        $response->assertStatus(200);
    }

    /**
     * @covers \App\Http\Controllers\User\ShortUrlController::addUrl()
     */
    public function testAddUrl()
    {
        $response = $this->actingAs($this->user)->post('account/urls', [
            'url' => 'https://star-citizen.wiki/'.str_random(4),
            'hash' => str_random(4),
        ]);
        $response->assertStatus(302);
        $response->assertRedirect('account/urls');
    }

    /**
     * @covers \App\Http\Controllers\User\ShortUrlController::addUrl()
     */
    public function testAddUrlException()
    {
        $response = $this->actingAs($this->user)->post('account/urls', [
            'url' => 'https://notwhitelisted.wiki/'.str_random(4),
            'hash' => str_random(4),
        ]);
        $response->assertStatus(302);
    }

    /**
     * @covers \App\Http\Controllers\User\ShortUrlController::deleteUrl()
     */
    public function testDeleteUrl()
    {
        $url = ShortUrl::createShortUrl([
            'user_id' => $this->user->id,
            'url' => 'https://star-citizen.wiki/'.str_random(4),
            'hash' => str_random(5),
            'expires' => null,
        ]);

        $response = $this->actingAs($this->user)->delete('account/urls', [
            'id' => $url->id,
        ]);
        $response->assertStatus(302);
    }

    /**
     * @covers \App\Http\Controllers\User\ShortUrlController::showEditUrlView()
     */
    public function testEditUrlViewNotExist()
    {
        $response = $this->actingAs($this->user)->get('account/urls/-1');
        $response->assertStatus(302);
    }

    /**
     * @covers \App\Http\Controllers\User\ShortUrlController::updateUrl()
     * @covers \App\Models\ShortUrl\ShortUrl::createShortUrl()
     * @covers \App\Http\Middleware\VerifyCsrfToken
     */
    public function testUpdateUrl()
    {
        $hash = str_random(5);
        $url = ShortUrl::createShortUrl([
            'user_id' => $this->user->id,
            'url' => 'https://star-citizen.wiki/'.str_random(4),
            'hash' => $hash,
            'expires' => null,
        ]);

        $this->assertEquals($hash, $url->hash);

        $response = $this->actingAs($this->user)->patch('account/urls', [
            'id' => $url->id,
            'url' => 'https://star-citizen.wiki/'.str_random(4),
            'hash' => str_random(5),
        ]);

        $response->assertStatus(302);
    }
}
