<?php

namespace Tests\Feature\Controller\Account;

use App\Models\User;
use App\Models\ShortURL\ShortURL;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;

/**
 * Class ShortURLTest
 * @package Tests\Feature\Controller\Account
 */
class ShortURLControllerTest extends TestCase
{
    use DatabaseTransactions;

    private $user;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = factory(User::class)->create();
    }

    /**
     * @covers \App\Http\Controllers\Auth\Account\ShortURLController::showURLsListView()
     */
    public function testURLView()
    {
        $response = $this->actingAs($this->user)->get('account/urls');
        $response->assertStatus(200);
    }

    /**
     * @covers \App\Http\Controllers\Auth\Account\ShortURLController::showAddURLView()
     */
    public function testURLAddView()
    {
        $response = $this->actingAs($this->user)->get('account/urls/add');
        $response->assertStatus(200);
    }

    /**
     * @covers \App\Http\Controllers\Auth\Account\ShortURLController::addURL()
     */
    public function testAddURL()
    {
        $response = $this->actingAs($this->user)->post('account/urls', [
            'url' => 'https://star-citizen.wiki/'.str_random(4),
            'hash_name' => str_random(4),
        ]);
        $response->assertStatus(302);
        $response->assertRedirect('account/urls');
    }

    /**
     * @covers \App\Http\Controllers\Auth\Account\ShortURLController::addURL()
     */
    public function testAddURLException()
    {
        $response = $this->actingAs($this->user)->post('account/urls', [
            'url' => 'https://notwhitelisted.wiki/'.str_random(4),
            'hash_name' => str_random(4),
        ]);
        $response->assertStatus(302);
    }

    /**
     * @covers \App\Http\Controllers\Auth\Account\ShortURLController::deleteURL()
     */
    public function testDeleteURL()
    {
        $url = $this->user->shortURLs()->first();
        $response = $this->actingAs($this->user)->delete('account/urls', [
            'id' => $url->id,
        ]);
        $response->assertStatus(302);
    }

    /**
     * @covers \App\Http\Controllers\Auth\Account\ShortURLController::showEditURLView()
     */
    public function testEditURLViewNotExist()
    {
        $response = $this->actingAs($this->user)->get('account/urls/-1');
        $response->assertStatus(302);
    }

    /**
     * @covers \App\Http\Controllers\Auth\Account\ShortURLController::updateURL()
     * @covers \App\Models\ShortURL\ShortURL::createShortURL()
     * @covers \App\Http\Middleware\VerifyCsrfToken
     */
    public function testUpdateURL()
    {
        $hash_name = str_random(5);
        $url = ShortURL::createShortURL([
            'user_id' => $this->user->id,
            'url' => 'https://star-citizen.wiki/'.str_random(4),
            'hash_name' => $hash_name,
            'expires' => null,
        ]);

        $this->assertEquals($hash_name, $url->hash_name);

        $response = $this->actingAs($this->user)->patch('account/urls', [
            'id' => $url->id,
            'url' => 'https://star-citizen.wiki/'.str_random(4),
            'hash_name' => str_random(5),
        ]);

        $response->assertStatus(302);
    }
}
