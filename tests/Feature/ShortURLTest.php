<?php

namespace Tests\Feature;

use App\Exceptions\URLNotWhitelistedException;
use App\Http\Controllers\ShortURL\ShortURLController;
use App\Models\ShortURL\ShortURL;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;

/**
 * Class ShortURLTest
 * @package Tests\Feature
 */
class ShortURLTest extends TestCase
{
    use DatabaseTransactions;

    private $url;
    private $hash_name;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->url = 'https://star-citizen.wiki/'.str_random(16);
        $this->hash_name = str_random(6);
    }

    /**
     * Test not WhitelistedException
     */
    public function testNotWhitelistedException()
    {
        $this->expectException(URLNotWhitelistedException::class);
        ShortURL::createShortURL(['url' => 'https://notwhitelisted.com']);
    }

    /**
     * Test NotFound Exception
     */
    public function testHashNotExistsException()
    {
        $this->expectException(ModelNotFoundException::class);
        ShortURL::resolve('Does_Not_Exist');
    }

    /**
     * Test Repository Creation
     */
    public function testShortURLCreation()
    {
        $url = ShortURL::createShortURL([
            'url' => $this->url,
            'hash_name' => $this->hash_name,
            'user_id' => 1,
        ]);
        $this->assertEquals($this->hash_name, $url->hash_name);
    }

    /**
     * Tests json resolve
     */
    public function testAPIResolve()
    {
        ShortURL::createShortURL([
            'url' => $this->url.'1',
            'hash_name' => $this->hash_name.'1',
            'user_id' => 1,
        ]);
        $response = $this->post('api/v1/resolve', ['hash_name' => $this->hash_name.'1']);
        $response->assertSee('original_url');
    }
}