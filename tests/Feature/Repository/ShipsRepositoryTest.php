<?php declare(strict_types = 1);

namespace Tests\Feature\Repository;

use App\Exceptions\InvalidDataException;
use App\Repositories\StarCitizenWiki\ApiV1\ShipsRepository;
use Illuminate\Http\Request;
use Tests\TestCase;

/**
 * Class ShipsTest
 * @package Tests\Feature\Repository
 * @covers \App\Repositories\AbstractBaseRepository
 * @covers \App\Repositories\StarCitizenWiki\AbstractStarCitizenWikiRepository
 */
class ShipsRepositoryTest extends TestCase
{
    /**
     * @var ShipsRepository
     */
    private $repository;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->repository = resolve(ShipsRepository::class);
    }

    /**
     * Get Ship from Repository
     *
     * @covers \App\Repositories\StarCitizenWiki\ApiV1\ShipsRepository::getShip()
     * @throws \Exception
     */
    public function testShipRetrieval()
    {
        $this->repository->getShip(new Request(), '300i');
        $this->assertContains('300i', $this->repository->toJson());
    }

    /**
     * @covers \App\Repositories\StarCitizenWiki\ApiV1\ShipsRepository::getShipList()
     * @throws \Exception
     */
    public function testShipList()
    {
        $this->repository->getShipList();
        $this->assertContains('300i', $this->repository->toJson());
    }

    /**
     * @covers \App\Repositories\StarCitizenWiki\ApiV1\ShipsRepository::searchShips()
     * @throws \Exception
     */
    public function testShipSearch()
    {
        $this->repository->searchShips('300i');
        $this->assertContains('300i', $this->repository->toJson());
    }
}
